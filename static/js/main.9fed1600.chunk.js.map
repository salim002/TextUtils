{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","aria-checked","htmlFor","TextForm","len","word","split","join","trim","length","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","defaultProps","aboutText","Alert","alert","class","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.9fed1600.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n          <Link to=\"/about\" className=\"nav-link\">{props.aboutText}</Link>\r\n          </li> */}\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" aria-checked=\"true\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=>{\r\n    // console.log(\"UpperCase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  }\r\n\r\n  const handleLowClick = ()=>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase!\", \"success\");\r\n\r\n  }\r\n  const handleClearClick = ()=>{\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared!\", \"success\");\r\n  }\r\n\r\n  const handleOnChange = (event)=>{\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleCopy = ()=>{\r\n    let text = document.getElementById(\"exampleFormControlTextarea1\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text copied to clipboard!\", \"success\");\r\n\r\n  }\r\n\r\n  const handleExtraSpaces = ()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra spaces removed!\", \"success\");\r\n  }\r\n\r\n  const len = (word)=>{\r\n    if(word===\"\"){\r\n      return 0;\r\n    }\r\n    else{\r\n      let res = word.split(/[ ]+/);\r\n      // let res = tmp.join(\" \");\r\n      // return res.trim().split(\" \").length;\r\n      return res.join(\" \").trim().split(\" \").length;\r\n    }\r\n  }\r\n\r\n  const [text, setText] = useState('Enter text here');\r\n  // setText(\"new text\");\r\n  return (\r\n    <>\r\n    <div className=\"Container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick} >Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowClick} >Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick} >Clear Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy} >Copy Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces} >Remove Extra Spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{len(text)} words and {text.length} characters</p>\r\n      <p>{0.008 * len(text)} Minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode ==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n    {/* <Router>\n     <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n     <Alert alert={alert} />\n     <div className=\"container my-3\">\n     <Routes>\n     <Route exact path=\"/about\" element={<About />}>\n     </Route>\n     <Route exact path=\"/\" element={<TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />}>\n     </Route>\n     </Routes>\n     </div>\n    </Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert} />\n    <div className=\"container my-3\">\n    <TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />\n    </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}